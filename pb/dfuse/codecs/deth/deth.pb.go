// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfuse/codecs/deth/deth.proto

package deth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactionTraceStatus int32

const (
	TransactionTraceStatus_UNKNOWN   TransactionTraceStatus = 0
	TransactionTraceStatus_SUCCEEDED TransactionTraceStatus = 1
	TransactionTraceStatus_FAILED    TransactionTraceStatus = 2
	TransactionTraceStatus_REVERTED  TransactionTraceStatus = 3
)

var TransactionTraceStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCEEDED",
	2: "FAILED",
	3: "REVERTED",
}

var TransactionTraceStatus_value = map[string]int32{
	"UNKNOWN":   0,
	"SUCCEEDED": 1,
	"FAILED":    2,
	"REVERTED":  3,
}

func (x TransactionTraceStatus) String() string {
	return proto.EnumName(TransactionTraceStatus_name, int32(x))
}

func (TransactionTraceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{0}
}

type CallType int32

const (
	CallType_UNSPECIFIED CallType = 0
	CallType_CALL        CallType = 1
	CallType_CALLCODE    CallType = 2
	CallType_DELEGATE    CallType = 3
	CallType_STATIC      CallType = 4
	CallType_CREATE      CallType = 5
)

var CallType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "CALL",
	2: "CALLCODE",
	3: "DELEGATE",
	4: "STATIC",
	5: "CREATE",
}

var CallType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"CALL":        1,
	"CALLCODE":    2,
	"DELEGATE":    3,
	"STATIC":      4,
	"CREATE":      5,
}

func (x CallType) String() string {
	return proto.EnumName(CallType_name, int32(x))
}

func (CallType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{1}
}

type TransactionState_Transition int32

const (
	TransactionState_TRANS_INIT      TransactionState_Transition = 0
	TransactionState_TRANS_POOLED    TransactionState_Transition = 1
	TransactionState_TRANS_MINED     TransactionState_Transition = 2
	TransactionState_TRANS_FORKED    TransactionState_Transition = 3
	TransactionState_TRANS_CONFIRMED TransactionState_Transition = 4
	TransactionState_TRANS_REPLACED  TransactionState_Transition = 5
)

var TransactionState_Transition_name = map[int32]string{
	0: "TRANS_INIT",
	1: "TRANS_POOLED",
	2: "TRANS_MINED",
	3: "TRANS_FORKED",
	4: "TRANS_CONFIRMED",
	5: "TRANS_REPLACED",
}

var TransactionState_Transition_value = map[string]int32{
	"TRANS_INIT":      0,
	"TRANS_POOLED":    1,
	"TRANS_MINED":     2,
	"TRANS_FORKED":    3,
	"TRANS_CONFIRMED": 4,
	"TRANS_REPLACED":  5,
}

func (x TransactionState_Transition) String() string {
	return proto.EnumName(TransactionState_Transition_name, int32(x))
}

func (TransactionState_Transition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{6, 0}
}

type TransactionState_State int32

const (
	TransactionState_STATE_UNKNOWN  TransactionState_State = 0
	TransactionState_STATE_PENDING  TransactionState_State = 1
	TransactionState_STATE_IN_BLOCK TransactionState_State = 2
	TransactionState_STATE_REPLACED TransactionState_State = 3
)

var TransactionState_State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_PENDING",
	2: "STATE_IN_BLOCK",
	3: "STATE_REPLACED",
}

var TransactionState_State_value = map[string]int32{
	"STATE_UNKNOWN":  0,
	"STATE_PENDING":  1,
	"STATE_IN_BLOCK": 2,
	"STATE_REPLACED": 3,
}

func (x TransactionState_State) String() string {
	return proto.EnumName(TransactionState_State_name, int32(x))
}

func (TransactionState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{6, 1}
}

// Obtain all balanche change reasons under deep mind repository:
//
//     ack -ho 'BalanceChangeReason\(".*"\)' | grep -Eo '".*"' | sort | uniq
type BalanceChange_Reason int32

const (
	BalanceChange_REASON_UNKNOWN                BalanceChange_Reason = 0
	BalanceChange_REASON_REWARD_MINE_UNCLE      BalanceChange_Reason = 1
	BalanceChange_REASON_REWARD_MINE_BLOCK      BalanceChange_Reason = 2
	BalanceChange_REASON_DAO_REFUND_CONTRACT    BalanceChange_Reason = 3
	BalanceChange_REASON_DAO_ADJUST_BALANCE     BalanceChange_Reason = 4
	BalanceChange_REASON_TRANSFER               BalanceChange_Reason = 5
	BalanceChange_REASON_GENESIS_BALANCE        BalanceChange_Reason = 6
	BalanceChange_REASON_GAS_BUY                BalanceChange_Reason = 7
	BalanceChange_REASON_REWARD_TRANSACTION_FEE BalanceChange_Reason = 8
	BalanceChange_REASON_GAS_REFUND             BalanceChange_Reason = 9
	BalanceChange_REASON_TOUCH_ACCOUNT          BalanceChange_Reason = 10
	BalanceChange_REASON_SUICIDE_REFUND         BalanceChange_Reason = 11
	BalanceChange_REASON_SUICIDE_WITHDRAW       BalanceChange_Reason = 13
	BalanceChange_REASON_CALL_BALANCE_OVERRIDE  BalanceChange_Reason = 12
)

var BalanceChange_Reason_name = map[int32]string{
	0:  "REASON_UNKNOWN",
	1:  "REASON_REWARD_MINE_UNCLE",
	2:  "REASON_REWARD_MINE_BLOCK",
	3:  "REASON_DAO_REFUND_CONTRACT",
	4:  "REASON_DAO_ADJUST_BALANCE",
	5:  "REASON_TRANSFER",
	6:  "REASON_GENESIS_BALANCE",
	7:  "REASON_GAS_BUY",
	8:  "REASON_REWARD_TRANSACTION_FEE",
	9:  "REASON_GAS_REFUND",
	10: "REASON_TOUCH_ACCOUNT",
	11: "REASON_SUICIDE_REFUND",
	13: "REASON_SUICIDE_WITHDRAW",
	12: "REASON_CALL_BALANCE_OVERRIDE",
}

var BalanceChange_Reason_value = map[string]int32{
	"REASON_UNKNOWN":                0,
	"REASON_REWARD_MINE_UNCLE":      1,
	"REASON_REWARD_MINE_BLOCK":      2,
	"REASON_DAO_REFUND_CONTRACT":    3,
	"REASON_DAO_ADJUST_BALANCE":     4,
	"REASON_TRANSFER":               5,
	"REASON_GENESIS_BALANCE":        6,
	"REASON_GAS_BUY":                7,
	"REASON_REWARD_TRANSACTION_FEE": 8,
	"REASON_GAS_REFUND":             9,
	"REASON_TOUCH_ACCOUNT":          10,
	"REASON_SUICIDE_REFUND":         11,
	"REASON_SUICIDE_WITHDRAW":       13,
	"REASON_CALL_BALANCE_OVERRIDE":  12,
}

func (x BalanceChange_Reason) String() string {
	return proto.EnumName(BalanceChange_Reason_name, int32(x))
}

func (BalanceChange_Reason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{13, 0}
}

// Obtain all gas change reasons under deep mind repository:
//
//     ack -ho 'GasChangeReason\(".*"\)' | grep -Eo '".*"' | sort | uniq
type GasChange_Reason int32

const (
	GasChange_REASON_UNKNOWN                GasChange_Reason = 0
	GasChange_REASON_CALL                   GasChange_Reason = 1
	GasChange_REASON_CALL_CODE              GasChange_Reason = 2
	GasChange_REASON_CALL_DATA_COPY         GasChange_Reason = 3
	GasChange_REASON_CODE_COPY              GasChange_Reason = 4
	GasChange_REASON_CODE_STORAGE           GasChange_Reason = 5
	GasChange_REASON_CONTRACT_CREATION      GasChange_Reason = 6
	GasChange_REASON_CONTRACT_CREATION2     GasChange_Reason = 7
	GasChange_REASON_DELEGATE_CALL          GasChange_Reason = 8
	GasChange_REASON_EVENT_LOG              GasChange_Reason = 9
	GasChange_REASON_EXT_CODE_COPY          GasChange_Reason = 10
	GasChange_REASON_FAILED_EXECUTION       GasChange_Reason = 11
	GasChange_REASON_INTRINSIC_GAS          GasChange_Reason = 12
	GasChange_REASON_PRECOMPILED_CONTRACT   GasChange_Reason = 13
	GasChange_REASON_REFUND_AFTER_EXECUTION GasChange_Reason = 14
	GasChange_REASON_RETURN                 GasChange_Reason = 15
	GasChange_REASON_RETURN_DATA_COPY       GasChange_Reason = 16
	GasChange_REASON_REVERT                 GasChange_Reason = 17
	GasChange_REASON_SELF_DESTRUCT          GasChange_Reason = 18
	GasChange_REASON_STATIC_CALL            GasChange_Reason = 19
)

var GasChange_Reason_name = map[int32]string{
	0:  "REASON_UNKNOWN",
	1:  "REASON_CALL",
	2:  "REASON_CALL_CODE",
	3:  "REASON_CALL_DATA_COPY",
	4:  "REASON_CODE_COPY",
	5:  "REASON_CODE_STORAGE",
	6:  "REASON_CONTRACT_CREATION",
	7:  "REASON_CONTRACT_CREATION2",
	8:  "REASON_DELEGATE_CALL",
	9:  "REASON_EVENT_LOG",
	10: "REASON_EXT_CODE_COPY",
	11: "REASON_FAILED_EXECUTION",
	12: "REASON_INTRINSIC_GAS",
	13: "REASON_PRECOMPILED_CONTRACT",
	14: "REASON_REFUND_AFTER_EXECUTION",
	15: "REASON_RETURN",
	16: "REASON_RETURN_DATA_COPY",
	17: "REASON_REVERT",
	18: "REASON_SELF_DESTRUCT",
	19: "REASON_STATIC_CALL",
}

var GasChange_Reason_value = map[string]int32{
	"REASON_UNKNOWN":                0,
	"REASON_CALL":                   1,
	"REASON_CALL_CODE":              2,
	"REASON_CALL_DATA_COPY":         3,
	"REASON_CODE_COPY":              4,
	"REASON_CODE_STORAGE":           5,
	"REASON_CONTRACT_CREATION":      6,
	"REASON_CONTRACT_CREATION2":     7,
	"REASON_DELEGATE_CALL":          8,
	"REASON_EVENT_LOG":              9,
	"REASON_EXT_CODE_COPY":          10,
	"REASON_FAILED_EXECUTION":       11,
	"REASON_INTRINSIC_GAS":          12,
	"REASON_PRECOMPILED_CONTRACT":   13,
	"REASON_REFUND_AFTER_EXECUTION": 14,
	"REASON_RETURN":                 15,
	"REASON_RETURN_DATA_COPY":       16,
	"REASON_REVERT":                 17,
	"REASON_SELF_DESTRUCT":          18,
	"REASON_STATIC_CALL":            19,
}

func (x GasChange_Reason) String() string {
	return proto.EnumName(GasChange_Reason_name, int32(x))
}

func (GasChange_Reason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{16, 0}
}

// Obtain all gas change reasons under deep mind repository:
//
//     ack -ho 'GasEventID\(".*"\)' | grep -Eo '".*"' | sort | uniq
type GasEvent_Id int32

const (
	GasEvent_ID_UNKNOWN     GasEvent_Id = 0
	GasEvent_ID_AFTER_CALL  GasEvent_Id = 1
	GasEvent_ID_BEFORE_CALL GasEvent_Id = 2
)

var GasEvent_Id_name = map[int32]string{
	0: "ID_UNKNOWN",
	1: "ID_AFTER_CALL",
	2: "ID_BEFORE_CALL",
}

var GasEvent_Id_value = map[string]int32{
	"ID_UNKNOWN":     0,
	"ID_AFTER_CALL":  1,
	"ID_BEFORE_CALL": 2,
}

func (x GasEvent_Id) String() string {
	return proto.EnumName(GasEvent_Id_name, int32(x))
}

func (GasEvent_Id) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{17, 0}
}

type Block struct {
	Ver                  int32               `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`
	Hash                 []byte              `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Number               uint64              `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Size                 uint64              `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Header               *BlockHeader        `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	Uncles               []*BlockHeader      `protobuf:"bytes,6,rep,name=uncles,proto3" json:"uncles,omitempty"`
	TransactionTraces    []*TransactionTrace `protobuf:"bytes,10,rep,name=transaction_traces,json=transactionTraces,proto3" json:"transaction_traces,omitempty"`
	BalanceChanges       []*BalanceChange    `protobuf:"bytes,11,rep,name=balance_changes,json=balanceChanges,proto3" json:"balance_changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{0}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetVer() int32 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *Block) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Block) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Block) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Block) GetHeader() *BlockHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Block) GetUncles() []*BlockHeader {
	if m != nil {
		return m.Uncles
	}
	return nil
}

func (m *Block) GetTransactionTraces() []*TransactionTrace {
	if m != nil {
		return m.TransactionTraces
	}
	return nil
}

func (m *Block) GetBalanceChanges() []*BalanceChange {
	if m != nil {
		return m.BalanceChanges
	}
	return nil
}

type TransactionRefs struct {
	Hashes               [][]byte `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRefs) Reset()         { *m = TransactionRefs{} }
func (m *TransactionRefs) String() string { return proto.CompactTextString(m) }
func (*TransactionRefs) ProtoMessage()    {}
func (*TransactionRefs) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{1}
}

func (m *TransactionRefs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRefs.Unmarshal(m, b)
}
func (m *TransactionRefs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRefs.Marshal(b, m, deterministic)
}
func (m *TransactionRefs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRefs.Merge(m, src)
}
func (m *TransactionRefs) XXX_Size() int {
	return xxx_messageInfo_TransactionRefs.Size(m)
}
func (m *TransactionRefs) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRefs.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRefs proto.InternalMessageInfo

func (m *TransactionRefs) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type UnclesHeaders struct {
	Uncles               []*BlockHeader `protobuf:"bytes,1,rep,name=uncles,proto3" json:"uncles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UnclesHeaders) Reset()         { *m = UnclesHeaders{} }
func (m *UnclesHeaders) String() string { return proto.CompactTextString(m) }
func (*UnclesHeaders) ProtoMessage()    {}
func (*UnclesHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{2}
}

func (m *UnclesHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnclesHeaders.Unmarshal(m, b)
}
func (m *UnclesHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnclesHeaders.Marshal(b, m, deterministic)
}
func (m *UnclesHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnclesHeaders.Merge(m, src)
}
func (m *UnclesHeaders) XXX_Size() int {
	return xxx_messageInfo_UnclesHeaders.Size(m)
}
func (m *UnclesHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_UnclesHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_UnclesHeaders proto.InternalMessageInfo

func (m *UnclesHeaders) GetUncles() []*BlockHeader {
	if m != nil {
		return m.Uncles
	}
	return nil
}

type BlockRef struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Number               uint64   `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRef) Reset()         { *m = BlockRef{} }
func (m *BlockRef) String() string { return proto.CompactTextString(m) }
func (*BlockRef) ProtoMessage()    {}
func (*BlockRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{3}
}

func (m *BlockRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRef.Unmarshal(m, b)
}
func (m *BlockRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRef.Marshal(b, m, deterministic)
}
func (m *BlockRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRef.Merge(m, src)
}
func (m *BlockRef) XXX_Size() int {
	return xxx_messageInfo_BlockRef.Size(m)
}
func (m *BlockRef) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRef.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRef proto.InternalMessageInfo

func (m *BlockRef) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockRef) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type BlockHeader struct {
	ParentHash           []byte               `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	UncleHash            []byte               `protobuf:"bytes,2,opt,name=uncle_hash,json=uncleHash,proto3" json:"uncle_hash,omitempty"`
	Coinbase             []byte               `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	StateRoot            []byte               `protobuf:"bytes,4,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	TransactionsRoot     []byte               `protobuf:"bytes,5,opt,name=transactions_root,json=transactionsRoot,proto3" json:"transactions_root,omitempty"`
	ReceiptRoot          []byte               `protobuf:"bytes,6,opt,name=receipt_root,json=receiptRoot,proto3" json:"receipt_root,omitempty"`
	LogsBloom            []byte               `protobuf:"bytes,7,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom,omitempty"`
	Difficulty           *BigInt              `protobuf:"bytes,8,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Number               uint64               `protobuf:"varint,9,opt,name=number,proto3" json:"number,omitempty"`
	GasLimit             uint64               `protobuf:"varint,10,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed              uint64               `protobuf:"varint,11,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ExtraData            []byte               `protobuf:"bytes,13,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	MixHash              []byte               `protobuf:"bytes,14,opt,name=mix_hash,json=mixHash,proto3" json:"mix_hash,omitempty"`
	Nonce                uint64               `protobuf:"varint,15,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Hash                 []byte               `protobuf:"bytes,16,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{4}
}

func (m *BlockHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeader.Unmarshal(m, b)
}
func (m *BlockHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeader.Marshal(b, m, deterministic)
}
func (m *BlockHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeader.Merge(m, src)
}
func (m *BlockHeader) XXX_Size() int {
	return xxx_messageInfo_BlockHeader.Size(m)
}
func (m *BlockHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeader proto.InternalMessageInfo

func (m *BlockHeader) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *BlockHeader) GetUncleHash() []byte {
	if m != nil {
		return m.UncleHash
	}
	return nil
}

func (m *BlockHeader) GetCoinbase() []byte {
	if m != nil {
		return m.Coinbase
	}
	return nil
}

func (m *BlockHeader) GetStateRoot() []byte {
	if m != nil {
		return m.StateRoot
	}
	return nil
}

func (m *BlockHeader) GetTransactionsRoot() []byte {
	if m != nil {
		return m.TransactionsRoot
	}
	return nil
}

func (m *BlockHeader) GetReceiptRoot() []byte {
	if m != nil {
		return m.ReceiptRoot
	}
	return nil
}

func (m *BlockHeader) GetLogsBloom() []byte {
	if m != nil {
		return m.LogsBloom
	}
	return nil
}

func (m *BlockHeader) GetDifficulty() *BigInt {
	if m != nil {
		return m.Difficulty
	}
	return nil
}

func (m *BlockHeader) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *BlockHeader) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *BlockHeader) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *BlockHeader) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *BlockHeader) GetExtraData() []byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

func (m *BlockHeader) GetMixHash() []byte {
	if m != nil {
		return m.MixHash
	}
	return nil
}

func (m *BlockHeader) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *BlockHeader) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BigInt struct {
	Bytes                []byte   `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigInt) Reset()         { *m = BigInt{} }
func (m *BigInt) String() string { return proto.CompactTextString(m) }
func (*BigInt) ProtoMessage()    {}
func (*BigInt) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{5}
}

func (m *BigInt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigInt.Unmarshal(m, b)
}
func (m *BigInt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigInt.Marshal(b, m, deterministic)
}
func (m *BigInt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigInt.Merge(m, src)
}
func (m *BigInt) XXX_Size() int {
	return xxx_messageInfo_BigInt.Size(m)
}
func (m *BigInt) XXX_DiscardUnknown() {
	xxx_messageInfo_BigInt.DiscardUnknown(m)
}

var xxx_messageInfo_BigInt proto.InternalMessageInfo

func (m *BigInt) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type TransactionState struct {
	PreviousState        TransactionState_State      `protobuf:"varint,1,opt,name=previous_state,json=previousState,proto3,enum=dfuse.codecs.deth.TransactionState_State" json:"previous_state,omitempty"`
	CurrentState         TransactionState_State      `protobuf:"varint,2,opt,name=current_state,json=currentState,proto3,enum=dfuse.codecs.deth.TransactionState_State" json:"current_state,omitempty"`
	Transition           TransactionState_Transition `protobuf:"varint,10,opt,name=transition,proto3,enum=dfuse.codecs.deth.TransactionState_Transition" json:"transition,omitempty"`
	TransactionId        string                      `protobuf:"bytes,11,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Trx                  *Transaction                `protobuf:"bytes,3,opt,name=trx,proto3" json:"trx,omitempty"`
	BlockHeader          *BlockHeader                `protobuf:"bytes,4,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	TransactionTraces    *TransactionTrace           `protobuf:"bytes,5,opt,name=transaction_traces,json=transactionTraces,proto3" json:"transaction_traces,omitempty"`
	Confirmation         uint64                      `protobuf:"varint,6,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
	HeadBlockHeader      *BlockHeader                `protobuf:"bytes,7,opt,name=head_block_header,json=headBlockHeader,proto3" json:"head_block_header,omitempty"`
	ReplacedById         string                      `protobuf:"bytes,8,opt,name=replaced_by_id,json=replacedById,proto3" json:"replaced_by_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TransactionState) Reset()         { *m = TransactionState{} }
func (m *TransactionState) String() string { return proto.CompactTextString(m) }
func (*TransactionState) ProtoMessage()    {}
func (*TransactionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{6}
}

func (m *TransactionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionState.Unmarshal(m, b)
}
func (m *TransactionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionState.Marshal(b, m, deterministic)
}
func (m *TransactionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionState.Merge(m, src)
}
func (m *TransactionState) XXX_Size() int {
	return xxx_messageInfo_TransactionState.Size(m)
}
func (m *TransactionState) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionState.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionState proto.InternalMessageInfo

func (m *TransactionState) GetPreviousState() TransactionState_State {
	if m != nil {
		return m.PreviousState
	}
	return TransactionState_STATE_UNKNOWN
}

func (m *TransactionState) GetCurrentState() TransactionState_State {
	if m != nil {
		return m.CurrentState
	}
	return TransactionState_STATE_UNKNOWN
}

func (m *TransactionState) GetTransition() TransactionState_Transition {
	if m != nil {
		return m.Transition
	}
	return TransactionState_TRANS_INIT
}

func (m *TransactionState) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *TransactionState) GetTrx() *Transaction {
	if m != nil {
		return m.Trx
	}
	return nil
}

func (m *TransactionState) GetBlockHeader() *BlockHeader {
	if m != nil {
		return m.BlockHeader
	}
	return nil
}

func (m *TransactionState) GetTransactionTraces() *TransactionTrace {
	if m != nil {
		return m.TransactionTraces
	}
	return nil
}

func (m *TransactionState) GetConfirmation() uint64 {
	if m != nil {
		return m.Confirmation
	}
	return 0
}

func (m *TransactionState) GetHeadBlockHeader() *BlockHeader {
	if m != nil {
		return m.HeadBlockHeader
	}
	return nil
}

func (m *TransactionState) GetReplacedById() string {
	if m != nil {
		return m.ReplacedById
	}
	return ""
}

// A Transaction not yet in block
type Transaction struct {
	// consensus
	To       []byte  `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Nonce    uint64  `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice *BigInt `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit uint64  `protobuf:"varint,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Value    *BigInt `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Input    []byte  `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	V        []byte  `protobuf:"bytes,7,opt,name=v,proto3" json:"v,omitempty"`
	R        []byte  `protobuf:"bytes,8,opt,name=r,proto3" json:"r,omitempty"`
	S        []byte  `protobuf:"bytes,9,opt,name=s,proto3" json:"s,omitempty"`
	// meta
	Hash                 []byte   `protobuf:"bytes,21,opt,name=hash,proto3" json:"hash,omitempty"`
	From                 []byte   `protobuf:"bytes,22,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{7}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetGasPrice() *BigInt {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *Transaction) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *Transaction) GetValue() *BigInt {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Transaction) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Transaction) GetV() []byte {
	if m != nil {
		return m.V
	}
	return nil
}

func (m *Transaction) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Transaction) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

type TransactionTrace struct {
	// consensus
	To       []byte  `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Nonce    uint64  `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice *BigInt `protobuf:"bytes,3,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasLimit uint64  `protobuf:"varint,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Value    *BigInt `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Input    []byte  `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	V        []byte  `protobuf:"bytes,7,opt,name=v,proto3" json:"v,omitempty"`
	R        []byte  `protobuf:"bytes,8,opt,name=r,proto3" json:"r,omitempty"`
	S        []byte  `protobuf:"bytes,9,opt,name=s,proto3" json:"s,omitempty"`
	GasUsed  uint64  `protobuf:"varint,10,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	// meta
	Index                uint32                 `protobuf:"varint,20,opt,name=index,proto3" json:"index,omitempty"`
	Hash                 []byte                 `protobuf:"bytes,21,opt,name=hash,proto3" json:"hash,omitempty"`
	From                 []byte                 `protobuf:"bytes,22,opt,name=from,proto3" json:"from,omitempty"`
	ReturnData           []byte                 `protobuf:"bytes,23,opt,name=return_data,json=returnData,proto3" json:"return_data,omitempty"`
	PublicKey            []byte                 `protobuf:"bytes,24,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Status               TransactionTraceStatus `protobuf:"varint,30,opt,name=status,proto3,enum=dfuse.codecs.deth.TransactionTraceStatus" json:"status,omitempty"`
	Receipt              *TransactionReceipt    `protobuf:"bytes,31,opt,name=receipt,proto3" json:"receipt,omitempty"`
	Calls                []*Call                `protobuf:"bytes,32,rep,name=calls,proto3" json:"calls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionTrace) Reset()         { *m = TransactionTrace{} }
func (m *TransactionTrace) String() string { return proto.CompactTextString(m) }
func (*TransactionTrace) ProtoMessage()    {}
func (*TransactionTrace) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{8}
}

func (m *TransactionTrace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionTrace.Unmarshal(m, b)
}
func (m *TransactionTrace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionTrace.Marshal(b, m, deterministic)
}
func (m *TransactionTrace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionTrace.Merge(m, src)
}
func (m *TransactionTrace) XXX_Size() int {
	return xxx_messageInfo_TransactionTrace.Size(m)
}
func (m *TransactionTrace) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionTrace.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionTrace proto.InternalMessageInfo

func (m *TransactionTrace) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TransactionTrace) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TransactionTrace) GetGasPrice() *BigInt {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *TransactionTrace) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *TransactionTrace) GetValue() *BigInt {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TransactionTrace) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *TransactionTrace) GetV() []byte {
	if m != nil {
		return m.V
	}
	return nil
}

func (m *TransactionTrace) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *TransactionTrace) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *TransactionTrace) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *TransactionTrace) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TransactionTrace) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *TransactionTrace) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransactionTrace) GetReturnData() []byte {
	if m != nil {
		return m.ReturnData
	}
	return nil
}

func (m *TransactionTrace) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *TransactionTrace) GetStatus() TransactionTraceStatus {
	if m != nil {
		return m.Status
	}
	return TransactionTraceStatus_UNKNOWN
}

func (m *TransactionTrace) GetReceipt() *TransactionReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (m *TransactionTrace) GetCalls() []*Call {
	if m != nil {
		return m.Calls
	}
	return nil
}

type TransactionReceipt struct {
	// consensus
	StateRoot            []byte   `protobuf:"bytes,1,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	CumulativeGasUsed    uint64   `protobuf:"varint,2,opt,name=cumulative_gas_used,json=cumulativeGasUsed,proto3" json:"cumulative_gas_used,omitempty"`
	LogsBloom            []byte   `protobuf:"bytes,3,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom,omitempty"`
	Logs                 []*Log   `protobuf:"bytes,4,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionReceipt) Reset()         { *m = TransactionReceipt{} }
func (m *TransactionReceipt) String() string { return proto.CompactTextString(m) }
func (*TransactionReceipt) ProtoMessage()    {}
func (*TransactionReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{9}
}

func (m *TransactionReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionReceipt.Unmarshal(m, b)
}
func (m *TransactionReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionReceipt.Marshal(b, m, deterministic)
}
func (m *TransactionReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionReceipt.Merge(m, src)
}
func (m *TransactionReceipt) XXX_Size() int {
	return xxx_messageInfo_TransactionReceipt.Size(m)
}
func (m *TransactionReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionReceipt proto.InternalMessageInfo

func (m *TransactionReceipt) GetStateRoot() []byte {
	if m != nil {
		return m.StateRoot
	}
	return nil
}

func (m *TransactionReceipt) GetCumulativeGasUsed() uint64 {
	if m != nil {
		return m.CumulativeGasUsed
	}
	return 0
}

func (m *TransactionReceipt) GetLogsBloom() []byte {
	if m != nil {
		return m.LogsBloom
	}
	return nil
}

func (m *TransactionReceipt) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

type Log struct {
	// consensus
	Address []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Topics  [][]byte `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data    []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// supplement
	Index                uint32   `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	BlockIndex           uint32   `protobuf:"varint,6,opt,name=blockIndex,proto3" json:"blockIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{10}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Log) GetTopics() [][]byte {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *Log) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Log) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Log) GetBlockIndex() uint32 {
	if m != nil {
		return m.BlockIndex
	}
	return 0
}

type Call struct {
	Index         uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	ParentIndex   uint32   `protobuf:"varint,2,opt,name=parent_index,json=parentIndex,proto3" json:"parent_index,omitempty"`
	Depth         uint32   `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
	CallType      CallType `protobuf:"varint,4,opt,name=call_type,json=callType,proto3,enum=dfuse.codecs.deth.CallType" json:"call_type,omitempty"`
	Caller        []byte   `protobuf:"bytes,5,opt,name=caller,proto3" json:"caller,omitempty"`
	Address       []byte   `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Value         *BigInt  `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	GasLimit      uint64   `protobuf:"varint,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasConsumed   uint64   `protobuf:"varint,9,opt,name=gas_consumed,json=gasConsumed,proto3" json:"gas_consumed,omitempty"`
	Failed        bool     `protobuf:"varint,10,opt,name=failed,proto3" json:"failed,omitempty"`
	FailureReason string   `protobuf:"bytes,11,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	Reverted      bool     `protobuf:"varint,12,opt,name=reverted,proto3" json:"reverted,omitempty"`
	ReturnData    []byte   `protobuf:"bytes,13,opt,name=return_data,json=returnData,proto3" json:"return_data,omitempty"`
	Input         []byte   `protobuf:"bytes,14,opt,name=input,proto3" json:"input,omitempty"`
	ExecutedCode  bool     `protobuf:"varint,15,opt,name=executed_code,json=executedCode,proto3" json:"executed_code,omitempty"`
	Suicide       bool     `protobuf:"varint,16,opt,name=suicide,proto3" json:"suicide,omitempty"`
	// hex representation of the hash -> preimage
	KeccakPreimages      map[string]string `protobuf:"bytes,20,rep,name=keccak_preimages,json=keccakPreimages,proto3" json:"keccak_preimages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StorageChanges       []*StorageChange  `protobuf:"bytes,21,rep,name=storage_changes,json=storageChanges,proto3" json:"storage_changes,omitempty"`
	BalanceChanges       []*BalanceChange  `protobuf:"bytes,22,rep,name=balance_changes,json=balanceChanges,proto3" json:"balance_changes,omitempty"`
	NonceChanges         []*NonceChange    `protobuf:"bytes,24,rep,name=nonce_changes,json=nonceChanges,proto3" json:"nonce_changes,omitempty"`
	Logs                 []*Log            `protobuf:"bytes,25,rep,name=logs,proto3" json:"logs,omitempty"`
	CodeChanges          []*CodeChange     `protobuf:"bytes,26,rep,name=code_changes,json=codeChanges,proto3" json:"code_changes,omitempty"`
	CreatedAccounts      [][]byte          `protobuf:"bytes,27,rep,name=created_accounts,json=createdAccounts,proto3" json:"created_accounts,omitempty"`
	GasChanges           []*GasChange      `protobuf:"bytes,28,rep,name=gas_changes,json=gasChanges,proto3" json:"gas_changes,omitempty"`
	GasEvents            []*GasEvent       `protobuf:"bytes,29,rep,name=gas_events,json=gasEvents,proto3" json:"gas_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{11}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Call) GetParentIndex() uint32 {
	if m != nil {
		return m.ParentIndex
	}
	return 0
}

func (m *Call) GetDepth() uint32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Call) GetCallType() CallType {
	if m != nil {
		return m.CallType
	}
	return CallType_UNSPECIFIED
}

func (m *Call) GetCaller() []byte {
	if m != nil {
		return m.Caller
	}
	return nil
}

func (m *Call) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Call) GetValue() *BigInt {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Call) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *Call) GetGasConsumed() uint64 {
	if m != nil {
		return m.GasConsumed
	}
	return 0
}

func (m *Call) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *Call) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *Call) GetReverted() bool {
	if m != nil {
		return m.Reverted
	}
	return false
}

func (m *Call) GetReturnData() []byte {
	if m != nil {
		return m.ReturnData
	}
	return nil
}

func (m *Call) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Call) GetExecutedCode() bool {
	if m != nil {
		return m.ExecutedCode
	}
	return false
}

func (m *Call) GetSuicide() bool {
	if m != nil {
		return m.Suicide
	}
	return false
}

func (m *Call) GetKeccakPreimages() map[string]string {
	if m != nil {
		return m.KeccakPreimages
	}
	return nil
}

func (m *Call) GetStorageChanges() []*StorageChange {
	if m != nil {
		return m.StorageChanges
	}
	return nil
}

func (m *Call) GetBalanceChanges() []*BalanceChange {
	if m != nil {
		return m.BalanceChanges
	}
	return nil
}

func (m *Call) GetNonceChanges() []*NonceChange {
	if m != nil {
		return m.NonceChanges
	}
	return nil
}

func (m *Call) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *Call) GetCodeChanges() []*CodeChange {
	if m != nil {
		return m.CodeChanges
	}
	return nil
}

func (m *Call) GetCreatedAccounts() [][]byte {
	if m != nil {
		return m.CreatedAccounts
	}
	return nil
}

func (m *Call) GetGasChanges() []*GasChange {
	if m != nil {
		return m.GasChanges
	}
	return nil
}

func (m *Call) GetGasEvents() []*GasEvent {
	if m != nil {
		return m.GasEvents
	}
	return nil
}

type StorageChange struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	OldValue             []byte   `protobuf:"bytes,3,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue             []byte   `protobuf:"bytes,4,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageChange) Reset()         { *m = StorageChange{} }
func (m *StorageChange) String() string { return proto.CompactTextString(m) }
func (*StorageChange) ProtoMessage()    {}
func (*StorageChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{12}
}

func (m *StorageChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageChange.Unmarshal(m, b)
}
func (m *StorageChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageChange.Marshal(b, m, deterministic)
}
func (m *StorageChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageChange.Merge(m, src)
}
func (m *StorageChange) XXX_Size() int {
	return xxx_messageInfo_StorageChange.Size(m)
}
func (m *StorageChange) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageChange.DiscardUnknown(m)
}

var xxx_messageInfo_StorageChange proto.InternalMessageInfo

func (m *StorageChange) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *StorageChange) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *StorageChange) GetOldValue() []byte {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *StorageChange) GetNewValue() []byte {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type BalanceChange struct {
	Address              []byte               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldValue             *BigInt              `protobuf:"bytes,2,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue             *BigInt              `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	Reason               BalanceChange_Reason `protobuf:"varint,4,opt,name=reason,proto3,enum=dfuse.codecs.deth.BalanceChange_Reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BalanceChange) Reset()         { *m = BalanceChange{} }
func (m *BalanceChange) String() string { return proto.CompactTextString(m) }
func (*BalanceChange) ProtoMessage()    {}
func (*BalanceChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{13}
}

func (m *BalanceChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceChange.Unmarshal(m, b)
}
func (m *BalanceChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceChange.Marshal(b, m, deterministic)
}
func (m *BalanceChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceChange.Merge(m, src)
}
func (m *BalanceChange) XXX_Size() int {
	return xxx_messageInfo_BalanceChange.Size(m)
}
func (m *BalanceChange) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceChange.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceChange proto.InternalMessageInfo

func (m *BalanceChange) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *BalanceChange) GetOldValue() *BigInt {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *BalanceChange) GetNewValue() *BigInt {
	if m != nil {
		return m.NewValue
	}
	return nil
}

func (m *BalanceChange) GetReason() BalanceChange_Reason {
	if m != nil {
		return m.Reason
	}
	return BalanceChange_REASON_UNKNOWN
}

type NonceChange struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldValue             uint64   `protobuf:"varint,2,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue             uint64   `protobuf:"varint,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NonceChange) Reset()         { *m = NonceChange{} }
func (m *NonceChange) String() string { return proto.CompactTextString(m) }
func (*NonceChange) ProtoMessage()    {}
func (*NonceChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{14}
}

func (m *NonceChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonceChange.Unmarshal(m, b)
}
func (m *NonceChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonceChange.Marshal(b, m, deterministic)
}
func (m *NonceChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonceChange.Merge(m, src)
}
func (m *NonceChange) XXX_Size() int {
	return xxx_messageInfo_NonceChange.Size(m)
}
func (m *NonceChange) XXX_DiscardUnknown() {
	xxx_messageInfo_NonceChange.DiscardUnknown(m)
}

var xxx_messageInfo_NonceChange proto.InternalMessageInfo

func (m *NonceChange) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *NonceChange) GetOldValue() uint64 {
	if m != nil {
		return m.OldValue
	}
	return 0
}

func (m *NonceChange) GetNewValue() uint64 {
	if m != nil {
		return m.NewValue
	}
	return 0
}

type CodeChange struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OldHash              []byte   `protobuf:"bytes,2,opt,name=old_hash,json=oldHash,proto3" json:"old_hash,omitempty"`
	OldCode              []byte   `protobuf:"bytes,3,opt,name=old_code,json=oldCode,proto3" json:"old_code,omitempty"`
	NewHash              []byte   `protobuf:"bytes,4,opt,name=new_hash,json=newHash,proto3" json:"new_hash,omitempty"`
	NewCode              []byte   `protobuf:"bytes,5,opt,name=new_code,json=newCode,proto3" json:"new_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeChange) Reset()         { *m = CodeChange{} }
func (m *CodeChange) String() string { return proto.CompactTextString(m) }
func (*CodeChange) ProtoMessage()    {}
func (*CodeChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{15}
}

func (m *CodeChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeChange.Unmarshal(m, b)
}
func (m *CodeChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeChange.Marshal(b, m, deterministic)
}
func (m *CodeChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeChange.Merge(m, src)
}
func (m *CodeChange) XXX_Size() int {
	return xxx_messageInfo_CodeChange.Size(m)
}
func (m *CodeChange) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeChange.DiscardUnknown(m)
}

var xxx_messageInfo_CodeChange proto.InternalMessageInfo

func (m *CodeChange) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *CodeChange) GetOldHash() []byte {
	if m != nil {
		return m.OldHash
	}
	return nil
}

func (m *CodeChange) GetOldCode() []byte {
	if m != nil {
		return m.OldCode
	}
	return nil
}

func (m *CodeChange) GetNewHash() []byte {
	if m != nil {
		return m.NewHash
	}
	return nil
}

func (m *CodeChange) GetNewCode() []byte {
	if m != nil {
		return m.NewCode
	}
	return nil
}

// The gas change model represents the reason why some gas cost has occurred.
// The gas is computed per actual op codes. Doing them completely might prove
// overwhelming in most cases.
//
// Hence, we only index some of them, those that are costy like all the calls
// one, log events, return data, etc.
type GasChange struct {
	OldValue             uint64           `protobuf:"varint,1,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue             uint64           `protobuf:"varint,2,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	Reason               GasChange_Reason `protobuf:"varint,3,opt,name=reason,proto3,enum=dfuse.codecs.deth.GasChange_Reason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GasChange) Reset()         { *m = GasChange{} }
func (m *GasChange) String() string { return proto.CompactTextString(m) }
func (*GasChange) ProtoMessage()    {}
func (*GasChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{16}
}

func (m *GasChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasChange.Unmarshal(m, b)
}
func (m *GasChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasChange.Marshal(b, m, deterministic)
}
func (m *GasChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasChange.Merge(m, src)
}
func (m *GasChange) XXX_Size() int {
	return xxx_messageInfo_GasChange.Size(m)
}
func (m *GasChange) XXX_DiscardUnknown() {
	xxx_messageInfo_GasChange.DiscardUnknown(m)
}

var xxx_messageInfo_GasChange proto.InternalMessageInfo

func (m *GasChange) GetOldValue() uint64 {
	if m != nil {
		return m.OldValue
	}
	return 0
}

func (m *GasChange) GetNewValue() uint64 {
	if m != nil {
		return m.NewValue
	}
	return 0
}

func (m *GasChange) GetReason() GasChange_Reason {
	if m != nil {
		return m.Reason
	}
	return GasChange_REASON_UNKNOWN
}

// Gas events are emitted to faciliate gas tracking avoid the execution
// call stack that happens while processing a transaction on the chain.
//
// We currently have events for tracing of gas amount before and after
// each child call.
type GasEvent struct {
	Id                   GasEvent_Id `protobuf:"varint,1,opt,name=id,proto3,enum=dfuse.codecs.deth.GasEvent_Id" json:"id,omitempty"`
	Gas                  uint64      `protobuf:"varint,2,opt,name=gas,proto3" json:"gas,omitempty"`
	LinkedCallIndex      uint64      `protobuf:"varint,3,opt,name=linked_call_index,json=linkedCallIndex,proto3" json:"linked_call_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GasEvent) Reset()         { *m = GasEvent{} }
func (m *GasEvent) String() string { return proto.CompactTextString(m) }
func (*GasEvent) ProtoMessage()    {}
func (*GasEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f10a8911eca0e2c, []int{17}
}

func (m *GasEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasEvent.Unmarshal(m, b)
}
func (m *GasEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasEvent.Marshal(b, m, deterministic)
}
func (m *GasEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasEvent.Merge(m, src)
}
func (m *GasEvent) XXX_Size() int {
	return xxx_messageInfo_GasEvent.Size(m)
}
func (m *GasEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GasEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GasEvent proto.InternalMessageInfo

func (m *GasEvent) GetId() GasEvent_Id {
	if m != nil {
		return m.Id
	}
	return GasEvent_ID_UNKNOWN
}

func (m *GasEvent) GetGas() uint64 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func (m *GasEvent) GetLinkedCallIndex() uint64 {
	if m != nil {
		return m.LinkedCallIndex
	}
	return 0
}

func init() {
	proto.RegisterEnum("dfuse.codecs.deth.TransactionTraceStatus", TransactionTraceStatus_name, TransactionTraceStatus_value)
	proto.RegisterEnum("dfuse.codecs.deth.CallType", CallType_name, CallType_value)
	proto.RegisterEnum("dfuse.codecs.deth.TransactionState_Transition", TransactionState_Transition_name, TransactionState_Transition_value)
	proto.RegisterEnum("dfuse.codecs.deth.TransactionState_State", TransactionState_State_name, TransactionState_State_value)
	proto.RegisterEnum("dfuse.codecs.deth.BalanceChange_Reason", BalanceChange_Reason_name, BalanceChange_Reason_value)
	proto.RegisterEnum("dfuse.codecs.deth.GasChange_Reason", GasChange_Reason_name, GasChange_Reason_value)
	proto.RegisterEnum("dfuse.codecs.deth.GasEvent_Id", GasEvent_Id_name, GasEvent_Id_value)
	proto.RegisterType((*Block)(nil), "dfuse.codecs.deth.Block")
	proto.RegisterType((*TransactionRefs)(nil), "dfuse.codecs.deth.TransactionRefs")
	proto.RegisterType((*UnclesHeaders)(nil), "dfuse.codecs.deth.UnclesHeaders")
	proto.RegisterType((*BlockRef)(nil), "dfuse.codecs.deth.BlockRef")
	proto.RegisterType((*BlockHeader)(nil), "dfuse.codecs.deth.BlockHeader")
	proto.RegisterType((*BigInt)(nil), "dfuse.codecs.deth.BigInt")
	proto.RegisterType((*TransactionState)(nil), "dfuse.codecs.deth.TransactionState")
	proto.RegisterType((*Transaction)(nil), "dfuse.codecs.deth.Transaction")
	proto.RegisterType((*TransactionTrace)(nil), "dfuse.codecs.deth.TransactionTrace")
	proto.RegisterType((*TransactionReceipt)(nil), "dfuse.codecs.deth.TransactionReceipt")
	proto.RegisterType((*Log)(nil), "dfuse.codecs.deth.Log")
	proto.RegisterType((*Call)(nil), "dfuse.codecs.deth.Call")
	proto.RegisterMapType((map[string]string)(nil), "dfuse.codecs.deth.Call.KeccakPreimagesEntry")
	proto.RegisterType((*StorageChange)(nil), "dfuse.codecs.deth.StorageChange")
	proto.RegisterType((*BalanceChange)(nil), "dfuse.codecs.deth.BalanceChange")
	proto.RegisterType((*NonceChange)(nil), "dfuse.codecs.deth.NonceChange")
	proto.RegisterType((*CodeChange)(nil), "dfuse.codecs.deth.CodeChange")
	proto.RegisterType((*GasChange)(nil), "dfuse.codecs.deth.GasChange")
	proto.RegisterType((*GasEvent)(nil), "dfuse.codecs.deth.GasEvent")
}

func init() { proto.RegisterFile("dfuse/codecs/deth/deth.proto", fileDescriptor_3f10a8911eca0e2c) }

var fileDescriptor_3f10a8911eca0e2c = []byte{
	// 2470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x39, 0xdb, 0x72, 0xdb, 0xc6,
	0xd9, 0x01, 0x4f, 0xa2, 0x3e, 0x1e, 0x04, 0xad, 0x6d, 0x19, 0x92, 0x2c, 0x5b, 0x66, 0xfe, 0xcc,
	0xef, 0xb8, 0x2d, 0xd5, 0x3a, 0x33, 0x9e, 0x34, 0x99, 0x4e, 0x0a, 0x01, 0x90, 0x8c, 0x98, 0x01,
	0x35, 0x4b, 0xd0, 0x4e, 0x7a, 0x83, 0x01, 0x81, 0x15, 0x85, 0x31, 0x09, 0x70, 0x00, 0x50, 0xb1,
	0x72, 0xd7, 0x99, 0xde, 0xb4, 0x37, 0x9d, 0xe9, 0x13, 0xb4, 0x2f, 0xd0, 0xbb, 0xbe, 0x44, 0xdf,
	0xa1, 0xd7, 0xed, 0x63, 0x74, 0xf6, 0x00, 0x72, 0x29, 0xd3, 0xb2, 0x92, 0xdb, 0xde, 0x70, 0xf6,
	0x3b, 0xee, 0xb7, 0xdf, 0x69, 0xbf, 0x05, 0xe1, 0x41, 0x78, 0x3e, 0xcf, 0xc8, 0x51, 0x90, 0x84,
	0x24, 0xc8, 0x8e, 0x42, 0x92, 0x5f, 0xb0, 0x9f, 0xee, 0x2c, 0x4d, 0xf2, 0x04, 0x6d, 0x33, 0x6a,
	0x97, 0x53, 0xbb, 0x94, 0xb0, 0xf7, 0x68, 0x9c, 0x24, 0xe3, 0x09, 0x39, 0x62, 0x0c, 0xa3, 0xf9,
	0xf9, 0x51, 0x1e, 0x4d, 0x49, 0x96, 0xfb, 0xd3, 0x19, 0x97, 0xe9, 0xfc, 0xa7, 0x04, 0xd5, 0xe3,
	0x49, 0x12, 0xbc, 0x41, 0x2a, 0x94, 0x2f, 0x49, 0xaa, 0x29, 0x87, 0xca, 0x93, 0x2a, 0xa6, 0x4b,
	0x84, 0xa0, 0x72, 0xe1, 0x67, 0x17, 0x5a, 0xe9, 0x50, 0x79, 0xd2, 0xc4, 0x6c, 0x8d, 0x76, 0xa0,
	0x16, 0xcf, 0xa7, 0x23, 0x92, 0x6a, 0xe5, 0x43, 0xe5, 0x49, 0x05, 0x0b, 0x88, 0xf2, 0x66, 0xd1,
	0x0f, 0x44, 0xab, 0x30, 0x2c, 0x5b, 0xa3, 0xe7, 0x50, 0xbb, 0x20, 0x7e, 0x48, 0x52, 0xad, 0x7a,
	0xa8, 0x3c, 0x69, 0x3c, 0x7b, 0xd8, 0x7d, 0xc7, 0xc0, 0x2e, 0xdb, 0xfb, 0x05, 0xe3, 0xc2, 0x82,
	0x9b, 0xca, 0xcd, 0xe3, 0x60, 0x42, 0x32, 0xad, 0x76, 0x58, 0xbe, 0x8d, 0x1c, 0xe7, 0x46, 0x18,
	0x50, 0x9e, 0xfa, 0x71, 0xe6, 0x07, 0x79, 0x94, 0xc4, 0x5e, 0x9e, 0xfa, 0x01, 0xc9, 0x34, 0x60,
	0x3a, 0x3e, 0x5e, 0xa3, 0xc3, 0x5d, 0x32, 0xbb, 0x94, 0x17, 0x6f, 0xe7, 0xd7, 0x30, 0x19, 0xb2,
	0x61, 0x6b, 0xe4, 0x4f, 0xfc, 0x38, 0x20, 0x5e, 0x70, 0xe1, 0xc7, 0x63, 0x92, 0x69, 0x0d, 0xa6,
	0xf0, 0x70, 0x9d, 0x51, 0x9c, 0xd3, 0x60, 0x8c, 0xb8, 0x3d, 0x92, 0xc1, 0xac, 0xf3, 0x29, 0x6c,
	0x49, 0x3b, 0x62, 0x72, 0x9e, 0x51, 0x6f, 0x52, 0xaf, 0x92, 0x4c, 0x53, 0x0e, 0xcb, 0x4f, 0x9a,
	0x58, 0x40, 0x9d, 0x53, 0x68, 0x0d, 0xd9, 0x99, 0xf8, 0x09, 0x33, 0xc9, 0x25, 0xca, 0x8f, 0x71,
	0x49, 0xe7, 0x39, 0xd4, 0x19, 0x1a, 0x93, 0xf3, 0x45, 0x38, 0x95, 0xb5, 0xe1, 0x2c, 0xc9, 0xe1,
	0xec, 0xfc, 0xb5, 0x02, 0x0d, 0x49, 0x1f, 0x7a, 0x04, 0x8d, 0x99, 0x9f, 0x92, 0x38, 0xf7, 0x24,
	0x15, 0xc0, 0x51, 0x2f, 0xa8, 0xa2, 0x03, 0x00, 0xb6, 0xa5, 0x27, 0x65, 0xcc, 0x26, 0xc3, 0x30,
	0xf2, 0x1e, 0xd4, 0x83, 0x24, 0x8a, 0x47, 0x7e, 0x46, 0x58, 0xe2, 0x34, 0xf1, 0x02, 0xa6, 0xa2,
	0x59, 0xee, 0xe7, 0xc4, 0x4b, 0x93, 0x24, 0x67, 0x09, 0xd4, 0xc4, 0x9b, 0x0c, 0x83, 0x93, 0x24,
	0x47, 0x3f, 0x03, 0x39, 0x2c, 0x19, 0xe7, 0xaa, 0x32, 0x2e, 0x55, 0x26, 0x30, 0xe6, 0xc7, 0xd0,
	0x4c, 0x49, 0x40, 0xa2, 0x59, 0xce, 0xf9, 0x6a, 0x8c, 0xaf, 0x21, 0x70, 0x8c, 0xe5, 0x00, 0x60,
	0x92, 0x8c, 0x33, 0x6f, 0x34, 0x49, 0x92, 0xa9, 0xb6, 0xc1, 0xb7, 0xa3, 0x98, 0x63, 0x8a, 0x40,
	0xbf, 0x06, 0x08, 0xa3, 0xf3, 0xf3, 0x28, 0x98, 0x4f, 0xf2, 0x2b, 0xad, 0xce, 0x12, 0x77, 0x77,
	0x9d, 0xb7, 0xa3, 0xb1, 0x1d, 0xe7, 0x58, 0x62, 0x96, 0x9c, 0xb9, 0xb9, 0x52, 0x1b, 0xfb, 0xb0,
	0x39, 0xf6, 0x33, 0x6f, 0x12, 0x4d, 0xa3, 0x5c, 0x03, 0x46, 0xaa, 0x8f, 0xfd, 0xac, 0x47, 0x61,
	0xb4, 0x0b, 0x74, 0xed, 0xcd, 0x33, 0x12, 0x6a, 0x0d, 0x46, 0xdb, 0x18, 0xfb, 0xd9, 0x30, 0x23,
	0x21, 0xfa, 0x1c, 0x36, 0x17, 0xe5, 0xaa, 0x35, 0x99, 0x25, 0x7b, 0x5d, 0x5e, 0xd0, 0xdd, 0xa2,
	0xa0, 0xbb, 0x6e, 0xc1, 0x81, 0x97, 0xcc, 0xf4, 0x8c, 0xe4, 0x6d, 0x9e, 0xfa, 0x5e, 0xe8, 0xe7,
	0xbe, 0xd6, 0xe2, 0x67, 0x64, 0x18, 0xd3, 0xcf, 0x7d, 0xba, 0xe7, 0x34, 0x7a, 0xcb, 0x43, 0xd5,
	0x66, 0xc4, 0x8d, 0x69, 0xf4, 0x96, 0x05, 0xea, 0x2e, 0x54, 0xe3, 0x24, 0x0e, 0x88, 0xb6, 0xc5,
	0x6c, 0xe1, 0xc0, 0x22, 0x75, 0xd4, 0x65, 0xea, 0x74, 0x1e, 0x42, 0x8d, 0xfb, 0x80, 0xca, 0x8c,
	0xae, 0x72, 0x96, 0x9b, 0x94, 0xcc, 0x81, 0xce, 0xbf, 0x6a, 0xa0, 0x4a, 0xf9, 0x3e, 0xa0, 0x01,
	0x45, 0x67, 0xd0, 0x9e, 0xa5, 0xe4, 0x32, 0x4a, 0xe6, 0x99, 0xc7, 0x42, 0xcc, 0x64, 0xda, 0xcf,
	0x3e, 0xbd, 0xb9, 0x3c, 0x99, 0x70, 0x97, 0xfd, 0xe2, 0x56, 0xa1, 0x80, 0x6b, 0x74, 0xa0, 0x15,
	0xcc, 0x53, 0x96, 0x9a, 0x5c, 0x61, 0xe9, 0xc7, 0x2a, 0x6c, 0x0a, 0xf9, 0x42, 0x1f, 0xb0, 0xac,
	0x8a, 0x28, 0x1b, 0x8b, 0x56, 0xfb, 0x59, 0xf7, 0x36, 0xca, 0xdc, 0x85, 0x14, 0x96, 0x34, 0xa0,
	0x4f, 0xa0, 0x2d, 0x37, 0xa5, 0x88, 0x47, 0x79, 0x13, 0xb7, 0x24, 0xac, 0x1d, 0xa2, 0x5f, 0x42,
	0x39, 0x4f, 0xdf, 0xb2, 0xda, 0x58, 0x5f, 0xdd, 0x72, 0xeb, 0xa0, 0xac, 0x48, 0x87, 0xe6, 0x88,
	0x56, 0xa8, 0x27, 0x7a, 0x6c, 0xe5, 0x56, 0x3d, 0xb6, 0x31, 0x92, 0xaa, 0x7a, 0x7d, 0xc3, 0xe4,
	0xcd, 0xfa, 0xa7, 0x36, 0xcc, 0x0e, 0x34, 0x83, 0x24, 0x3e, 0x8f, 0xd2, 0xa9, 0xcf, 0x3c, 0x58,
	0x63, 0x79, 0xb4, 0x82, 0x43, 0x5f, 0xc3, 0x36, 0x35, 0xda, 0x5b, 0xb1, 0x7f, 0xe3, 0x56, 0xf6,
	0x6f, 0x51, 0x6e, 0xb9, 0x33, 0xfd, 0x1f, 0xb4, 0x53, 0x32, 0x9b, 0xf8, 0x01, 0x09, 0xbd, 0xd1,
	0x15, 0xf5, 0x6f, 0x9d, 0xf9, 0xb7, 0x59, 0x60, 0x8f, 0xaf, 0xec, 0xb0, 0xf3, 0x03, 0xc0, 0x32,
	0x3e, 0xa8, 0x0d, 0xe0, 0x62, 0xdd, 0x19, 0x78, 0xb6, 0x63, 0xbb, 0xea, 0x47, 0x48, 0x85, 0x26,
	0x87, 0xcf, 0xfa, 0xfd, 0x9e, 0x65, 0xaa, 0x0a, 0xda, 0x82, 0x06, 0xc7, 0x7c, 0x63, 0x3b, 0x96,
	0xa9, 0x96, 0x96, 0x2c, 0x27, 0x7d, 0xfc, 0xd2, 0x32, 0xd5, 0x32, 0xba, 0x03, 0x5b, 0x1c, 0x63,
	0xf4, 0x9d, 0x13, 0x1b, 0x7f, 0x63, 0x99, 0x6a, 0x05, 0x21, 0x68, 0x73, 0x24, 0xb6, 0xce, 0x7a,
	0xba, 0x61, 0x99, 0x6a, 0xb5, 0x33, 0x84, 0x2a, 0x4f, 0xad, 0x6d, 0x68, 0x0d, 0x5c, 0xdd, 0xb5,
	0xbc, 0xa1, 0xf3, 0xd2, 0xe9, 0xbf, 0x76, 0xd4, 0x8f, 0x96, 0xa8, 0x33, 0xcb, 0x31, 0x6d, 0xe7,
	0x54, 0x55, 0xa8, 0x0a, 0x8e, 0xb2, 0x1d, 0xef, 0xb8, 0xd7, 0x37, 0x5e, 0xaa, 0xa5, 0x25, 0x6e,
	0xa1, 0xb6, 0xdc, 0xf9, 0x5b, 0x09, 0x1a, 0x52, 0x40, 0x50, 0x1b, 0x4a, 0x79, 0x22, 0x4a, 0xb0,
	0x94, 0x27, 0xcb, 0x4a, 0x2e, 0xc9, 0x95, 0xfc, 0x9c, 0xf7, 0xa2, 0x59, 0x1a, 0x05, 0x44, 0x64,
	0xdb, 0x0d, 0xdd, 0x8d, 0xb6, 0xa6, 0x33, 0xca, 0xba, 0xda, 0xc3, 0x2a, 0xd7, 0x7a, 0xd8, 0x11,
	0x54, 0x2f, 0xfd, 0xc9, 0x9c, 0x88, 0xd4, 0xb9, 0x41, 0x21, 0xe7, 0xa3, 0xb6, 0x45, 0xf1, 0x6c,
	0x5e, 0xf4, 0x67, 0x0e, 0xa0, 0x26, 0x28, 0x97, 0xa2, 0x21, 0x2b, 0x97, 0x14, 0x4a, 0x59, 0x2c,
	0x9b, 0x58, 0x49, 0x29, 0x94, 0xb1, 0xb6, 0xda, 0xc4, 0x4a, 0xb6, 0xe8, 0x47, 0xf7, 0xa4, 0xab,
	0x0c, 0x41, 0xe5, 0x3c, 0x4d, 0xa6, 0xda, 0x0e, 0xc7, 0xd1, 0x75, 0xe7, 0x9f, 0x95, 0x95, 0x1e,
	0xc4, 0x52, 0xf4, 0x7f, 0xca, 0x51, 0xf2, 0xed, 0x02, 0xab, 0xb7, 0x0b, 0x53, 0x1d, 0x92, 0xb7,
	0xda, 0xdd, 0x43, 0xe5, 0x49, 0x0b, 0x73, 0xe0, 0xb6, 0x9e, 0xa5, 0x03, 0x41, 0x4a, 0xf2, 0x79,
	0x1a, 0xf3, 0x2b, 0xe6, 0x3e, 0x1f, 0x08, 0x38, 0x8a, 0xdd, 0x31, 0x07, 0x00, 0xb3, 0xf9, 0x68,
	0x12, 0x05, 0xde, 0x1b, 0x72, 0xa5, 0x69, 0xfc, 0x0a, 0xe2, 0x98, 0x97, 0xe4, 0x0a, 0xe9, 0x50,
	0xa3, 0xed, 0x7a, 0x9e, 0x69, 0x0f, 0x6f, 0xd3, 0xaf, 0x59, 0xe4, 0x06, 0x4c, 0x00, 0x0b, 0x41,
	0xf4, 0x15, 0x6c, 0x88, 0x7b, 0x5d, 0x7b, 0xc4, 0xdc, 0xf9, 0xc9, 0x07, 0xda, 0xa6, 0x18, 0x02,
	0x0a, 0x29, 0xf4, 0x0b, 0xa8, 0x06, 0xfe, 0x64, 0x92, 0x69, 0x87, 0x6c, 0xa6, 0xba, 0xbf, 0x46,
	0xdc, 0xf0, 0x27, 0x13, 0xcc, 0xb9, 0x3a, 0x7f, 0x57, 0x00, 0xbd, 0xab, 0xee, 0xda, 0xf8, 0xa2,
	0x5c, 0x1f, 0x5f, 0xba, 0x70, 0x27, 0x98, 0x4f, 0xe7, 0x13, 0x3f, 0x8f, 0x2e, 0x89, 0xb7, 0x08,
	0x06, 0xcf, 0xb5, 0xed, 0x25, 0xe9, 0x54, 0x84, 0x65, 0x75, 0x3c, 0x29, 0x5f, 0x1f, 0x4f, 0x9e,
	0x42, 0x85, 0x02, 0x5a, 0x85, 0x99, 0xbc, 0xb3, 0xc6, 0xe4, 0x5e, 0x32, 0xc6, 0x8c, 0xa7, 0xf3,
	0x7b, 0x05, 0xca, 0xbd, 0x64, 0x8c, 0x34, 0xd8, 0xf0, 0xc3, 0x30, 0x25, 0x59, 0x71, 0x43, 0x17,
	0x20, 0x9d, 0x58, 0xf2, 0x64, 0x16, 0x05, 0x99, 0x56, 0xe2, 0xf3, 0x27, 0x87, 0x68, 0xc4, 0x59,
	0x58, 0xf9, 0xf6, 0x6c, 0xbd, 0xcc, 0x97, 0x8a, 0x9c, 0x2f, 0x0f, 0x01, 0x58, 0x17, 0xb7, 0x19,
	0xa9, 0xc6, 0x48, 0x12, 0xa6, 0xf3, 0xe7, 0x4d, 0xa8, 0x50, 0x27, 0x2e, 0xc5, 0x15, 0x59, 0xfc,
	0x31, 0x34, 0xc5, 0x5c, 0xc9, 0x89, 0x25, 0x46, 0x14, 0xb3, 0x26, 0xd3, 0x40, 0x05, 0x43, 0x32,
	0xcb, 0x2f, 0x98, 0x31, 0x2d, 0xcc, 0x01, 0x3a, 0x1b, 0xd1, 0xa8, 0x78, 0xf9, 0xd5, 0x8c, 0x3f,
	0x3a, 0xda, 0xcf, 0xf6, 0xdf, 0x13, 0x3f, 0xf7, 0x6a, 0x46, 0x70, 0x3d, 0x10, 0x2b, 0x7a, 0x66,
	0xba, 0x16, 0xaf, 0x92, 0x26, 0x16, 0x90, 0xec, 0xa5, 0xda, 0xaa, 0x97, 0x16, 0x55, 0xbb, 0x71,
	0xcb, 0xaa, 0x5d, 0xe9, 0x01, 0xf5, 0x6b, 0x3d, 0xe0, 0x31, 0x34, 0x29, 0x31, 0x48, 0xe2, 0x6c,
	0x3e, 0x25, 0xa1, 0x98, 0x15, 0x1b, 0x63, 0x3f, 0x33, 0x04, 0x8a, 0x9a, 0x78, 0xee, 0x47, 0x13,
	0x51, 0xb3, 0x75, 0x2c, 0x20, 0x3a, 0x4b, 0xd0, 0xd5, 0x3c, 0x25, 0x5e, 0x4a, 0xfc, 0x2c, 0x89,
	0x8b, 0x59, 0x42, 0x60, 0x31, 0x43, 0xd2, 0x61, 0x3b, 0x25, 0x97, 0x24, 0xcd, 0x49, 0xc8, 0xc6,
	0xc6, 0x3a, 0x5e, 0xc0, 0xd7, 0xeb, 0xb6, 0xf5, 0x4e, 0xdd, 0x2e, 0x3a, 0x4e, 0x5b, 0xee, 0x38,
	0x1f, 0x43, 0x8b, 0xbc, 0x25, 0xc1, 0x3c, 0x27, 0xa1, 0x47, 0xcf, 0xcd, 0xc6, 0xc3, 0x3a, 0x6e,
	0x16, 0x48, 0x23, 0x09, 0x09, 0xf5, 0x60, 0x36, 0x8f, 0x82, 0x28, 0x24, 0x6c, 0x50, 0xac, 0xe3,
	0x02, 0x44, 0xaf, 0x41, 0x7d, 0x43, 0x82, 0xc0, 0x7f, 0xe3, 0xcd, 0x52, 0x12, 0x4d, 0x7d, 0xfa,
	0x8c, 0xba, 0xcb, 0x32, 0xf8, 0xe7, 0xef, 0x09, 0x5a, 0xf7, 0x25, 0xe3, 0x3f, 0x2b, 0xd8, 0xad,
	0x38, 0x4f, 0xaf, 0xf0, 0xd6, 0x9b, 0x55, 0x2c, 0x7d, 0x9e, 0x65, 0x79, 0x92, 0xfa, 0xe3, 0xe5,
	0xf3, 0xec, 0xde, 0x7b, 0x9f, 0x67, 0x03, 0xce, 0x59, 0x3c, 0xcf, 0x32, 0x19, 0x5c, 0xfb, 0xd2,
	0xdb, 0xf9, 0x69, 0x2f, 0x3d, 0x64, 0x40, 0x8b, 0x5d, 0x22, 0x0b, 0x45, 0xda, 0x7b, 0x1f, 0x6d,
	0x4e, 0xb2, 0x54, 0xd3, 0x8c, 0x13, 0x49, 0x49, 0x51, 0xe9, 0xbb, 0x1f, 0xae, 0x74, 0xf4, 0x5b,
	0x3a, 0x74, 0x85, 0xcb, 0xfd, 0xf6, 0x98, 0xcc, 0xc1, 0x3a, 0xdf, 0x26, 0x61, 0xb1, 0x5d, 0x23,
	0x58, 0xac, 0x33, 0xf4, 0x29, 0xa8, 0x41, 0x4a, 0x7c, 0x1a, 0x5f, 0x3f, 0x08, 0x92, 0x79, 0x9c,
	0x67, 0xda, 0x3e, 0xeb, 0x09, 0x5b, 0x02, 0xaf, 0x0b, 0x34, 0xfa, 0x0d, 0x34, 0x58, 0x02, 0x8b,
	0xbd, 0x1e, 0xb0, 0xbd, 0x1e, 0xac, 0xd9, 0xeb, 0xd4, 0xcf, 0xc4, 0x56, 0x30, 0x2e, 0x96, 0x19,
	0xfa, 0x02, 0x28, 0xe4, 0x91, 0x4b, 0x42, 0xf7, 0x38, 0x60, 0xd2, 0xfb, 0xeb, 0xa5, 0x2d, 0xca,
	0x83, 0x69, 0x2d, 0xb1, 0x55, 0xb6, 0x77, 0x0c, 0x77, 0xd7, 0xe5, 0x05, 0x52, 0xa1, 0x4c, 0x6f,
	0x19, 0x85, 0x55, 0x03, 0x5d, 0xd2, 0x34, 0xe6, 0x35, 0x5b, 0x62, 0x38, 0x0e, 0x7c, 0x51, 0xfa,
	0x5c, 0xe9, 0xcc, 0xa1, 0xb5, 0x92, 0x08, 0x37, 0xb4, 0x47, 0xa1, 0x96, 0xbf, 0x66, 0x99, 0xda,
	0x7d, 0xd8, 0x4c, 0x26, 0xa1, 0xc7, 0x55, 0x8b, 0x87, 0x6c, 0x32, 0x09, 0x5f, 0x15, 0x65, 0x1f,
	0x93, 0xef, 0x05, 0x91, 0xbf, 0x63, 0xeb, 0x31, 0xf9, 0x9e, 0x11, 0x3b, 0xff, 0xae, 0x40, 0x6b,
	0x25, 0x6b, 0x6e, 0xd8, 0xf7, 0xb9, 0xbc, 0x4b, 0xe9, 0x83, 0xb3, 0xc7, 0xc2, 0x80, 0xe7, 0xb2,
	0x01, 0x1f, 0x9e, 0x59, 0x0a, 0xdb, 0xd0, 0x57, 0x50, 0x13, 0xfd, 0x84, 0x77, 0xd2, 0xff, 0xff,
	0x50, 0xc6, 0x77, 0x79, 0xa7, 0xc1, 0x42, 0xac, 0xf3, 0xa7, 0x32, 0xd4, 0x44, 0xf3, 0x41, 0xd0,
	0xc6, 0x96, 0x3e, 0xe8, 0x3b, 0xd2, 0x94, 0xfb, 0x00, 0x34, 0x81, 0xc3, 0xd6, 0x6b, 0x1d, 0x9b,
	0x6c, 0xaa, 0xf6, 0x86, 0x8e, 0xd1, 0xb3, 0x54, 0xe5, 0x3d, 0xd4, 0x62, 0xf4, 0x7d, 0x08, 0x7b,
	0x82, 0x6a, 0xea, 0x7d, 0x0f, 0x5b, 0x27, 0x43, 0xc7, 0xa4, 0x23, 0xb7, 0x8b, 0x75, 0xc3, 0x55,
	0xcb, 0xe8, 0x00, 0x76, 0x25, 0xba, 0x6e, 0x7e, 0x3d, 0x1c, 0xb8, 0xde, 0xb1, 0xde, 0xd3, 0x1d,
	0xc3, 0x52, 0x2b, 0x74, 0x4a, 0x17, 0x64, 0x36, 0x97, 0x9f, 0x58, 0x58, 0xad, 0xa2, 0x3d, 0xd8,
	0x11, 0xc8, 0x53, 0xcb, 0xb1, 0x06, 0xf6, 0x60, 0x21, 0x50, 0x93, 0xec, 0x3f, 0xd5, 0x07, 0xde,
	0xf1, 0xf0, 0x3b, 0x75, 0x03, 0x3d, 0x86, 0x83, 0x55, 0x0b, 0x99, 0x2e, 0xdd, 0x70, 0xed, 0xbe,
	0xe3, 0x9d, 0x58, 0x96, 0x5a, 0x47, 0xf7, 0x60, 0x5b, 0x12, 0xe3, 0x66, 0xaa, 0x9b, 0x48, 0x83,
	0xbb, 0xc5, 0xf6, 0xfd, 0xa1, 0xf1, 0xc2, 0xd3, 0x0d, 0xa3, 0x3f, 0x74, 0x5c, 0x15, 0xd0, 0x2e,
	0xdc, 0x13, 0x94, 0xc1, 0xd0, 0x36, 0x6c, 0xd3, 0x2a, 0x84, 0x1a, 0x68, 0x1f, 0xee, 0x5f, 0x23,
	0xbd, 0xb6, 0xdd, 0x17, 0x26, 0xd6, 0x5f, 0xab, 0x2d, 0x74, 0x08, 0x0f, 0x04, 0xd1, 0xd0, 0x7b,
	0xbd, 0xc2, 0x70, 0xaf, 0xff, 0xca, 0xc2, 0xd8, 0x36, 0x2d, 0xb5, 0xd9, 0xf1, 0xa1, 0x21, 0x75,
	0x95, 0x1b, 0xd2, 0x6c, 0xff, 0x7a, 0x9a, 0x55, 0xde, 0x97, 0xcc, 0xfc, 0x5b, 0xdf, 0x32, 0x99,
	0xff, 0xa2, 0x00, 0x2c, 0x3b, 0xc9, 0x0d, 0x5b, 0xec, 0x02, 0xd5, 0x28, 0x7f, 0x14, 0xda, 0x48,
	0x26, 0x21, 0xfb, 0xd2, 0x20, 0x48, 0xec, 0x36, 0x29, 0x2f, 0x48, 0xec, 0x22, 0xd9, 0x05, 0xba,
	0x15, 0x97, 0xe2, 0x75, 0xb4, 0x11, 0x93, 0xef, 0x0b, 0x29, 0x4a, 0x62, 0x52, 0xd5, 0x05, 0x89,
	0x4a, 0x75, 0xfe, 0x58, 0x85, 0xcd, 0x45, 0xcb, 0x59, 0x3d, 0x9c, 0x72, 0xd3, 0xe1, 0x4a, 0xab,
	0x87, 0x43, 0x5f, 0x2e, 0xaa, 0xa1, 0xcc, 0xaa, 0xe1, 0xe3, 0x9b, 0x5a, 0xdb, 0xf5, 0x4a, 0xf8,
	0x43, 0xe5, 0xc6, 0x4a, 0xd8, 0x82, 0x86, 0x14, 0x3d, 0x55, 0x41, 0x77, 0x41, 0x95, 0xc3, 0x69,
	0xf4, 0x4d, 0x4b, 0x2d, 0x49, 0xc9, 0xc1, 0xb0, 0xa6, 0xee, 0xea, 0x9e, 0xd1, 0x3f, 0xfb, 0x4e,
	0x2d, 0xcb, 0x02, 0x7d, 0xd3, 0xe2, 0xd8, 0x0a, 0xba, 0x0f, 0x77, 0x64, 0xec, 0xc0, 0xed, 0x63,
	0xfd, 0xd4, 0x52, 0xab, 0x52, 0x71, 0x15, 0x35, 0xe3, 0x19, 0xd8, 0xd2, 0x69, 0xe6, 0xaa, 0x35,
	0xa9, 0x78, 0xde, 0xa1, 0x3e, 0x53, 0x37, 0xa4, 0xec, 0x35, 0xad, 0x9e, 0x75, 0x4a, 0x1f, 0xa0,
	0xcc, 0xec, 0xba, 0x64, 0x85, 0xf5, 0xca, 0x72, 0x5c, 0xaf, 0xd7, 0x3f, 0x5d, 0xc9, 0x76, 0xeb,
	0x5b, 0x57, 0xb2, 0x0f, 0xa4, 0x94, 0x3e, 0xd1, 0xed, 0x9e, 0x65, 0x7a, 0xd6, 0xb7, 0x96, 0x31,
	0x64, 0x56, 0x34, 0x24, 0x31, 0xdb, 0x71, 0xb1, 0xed, 0x0c, 0x6c, 0x83, 0x56, 0x91, 0xda, 0x44,
	0x8f, 0x60, 0x5f, 0x50, 0xce, 0xb0, 0x65, 0xf4, 0xbf, 0x39, 0x63, 0xb2, 0x8b, 0xea, 0x6f, 0xad,
	0x54, 0x26, 0xeb, 0x0c, 0xfa, 0x89, 0x6b, 0x61, 0x49, 0x7b, 0x9b, 0x3e, 0xb1, 0x17, 0x2c, 0xee,
	0x10, 0x3b, 0xea, 0x96, 0x64, 0x0d, 0x47, 0x49, 0x0e, 0x56, 0x57, 0xf8, 0x5f, 0x59, 0xd8, 0x55,
	0xb7, 0x25, 0x03, 0x07, 0x56, 0xef, 0xc4, 0x33, 0xad, 0x81, 0x8b, 0x87, 0x86, 0xab, 0x22, 0xb4,
	0x03, 0xa8, 0xa0, 0xb8, 0xba, 0x6b, 0x1b, 0xdc, 0x3f, 0x77, 0x3a, 0xff, 0x50, 0xa0, 0x5e, 0x5c,
	0x60, 0xa8, 0x0b, 0xa5, 0x28, 0x14, 0x1f, 0xba, 0x1e, 0xde, 0x70, 0xd3, 0x75, 0xed, 0x10, 0x97,
	0xa2, 0x90, 0x5e, 0x3b, 0x63, 0x3f, 0x13, 0x79, 0x49, 0x97, 0xe8, 0x29, 0x6c, 0x4f, 0xa2, 0xf8,
	0x0d, 0x1d, 0xbe, 0xe8, 0xd0, 0xcb, 0x67, 0x65, 0x5e, 0x94, 0x5b, 0x9c, 0x40, 0x67, 0x26, 0x3e,
	0x71, 0x7f, 0x09, 0x25, 0x3b, 0x44, 0x6d, 0x00, 0xdb, 0x5c, 0xfd, 0xd0, 0x60, 0x17, 0xde, 0x11,
	0xa9, 0x87, 0xa0, 0x6d, 0x9b, 0xde, 0xb1, 0x75, 0xd2, 0xc7, 0x22, 0xae, 0xa5, 0xa7, 0x0e, 0xec,
	0xac, 0x7f, 0x75, 0xa1, 0x06, 0x6c, 0x2c, 0xb5, 0xb5, 0x60, 0x73, 0x30, 0x34, 0x0c, 0xcb, 0x32,
	0xd9, 0xd7, 0x12, 0x80, 0x1a, 0x0f, 0xab, 0x5a, 0x42, 0x4d, 0xa8, 0x73, 0xbf, 0x59, 0xa6, 0x5a,
	0x7e, 0xfa, 0x1d, 0xd4, 0x8b, 0x11, 0x9c, 0xe6, 0xfe, 0xd0, 0x19, 0x9c, 0x59, 0x86, 0x7d, 0x62,
	0x5b, 0xa6, 0xfa, 0x11, 0xaa, 0x43, 0x45, 0x98, 0xd2, 0x84, 0x3a, 0x5d, 0x89, 0xec, 0x6f, 0x42,
	0xbd, 0xc8, 0x37, 0xb5, 0x4c, 0x95, 0x73, 0xdf, 0xaa, 0x15, 0xba, 0x66, 0xf9, 0x69, 0xa9, 0xd5,
	0xe3, 0xcf, 0x7e, 0xf7, 0xab, 0x71, 0x94, 0x5f, 0xcc, 0x47, 0xdd, 0x20, 0x99, 0x1e, 0x91, 0x24,
	0x0b, 0xfc, 0xd8, 0x0f, 0xfd, 0xa3, 0x51, 0x96, 0xa7, 0xc4, 0x9f, 0x1e, 0xcd, 0x46, 0x47, 0xef,
	0xfc, 0x5b, 0x32, 0xaa, 0xb1, 0xef, 0xa6, 0x9f, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x35, 0x85,
	0x7c, 0xaf, 0x49, 0x19, 0x00, 0x00,
}
